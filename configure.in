dnl Process this file with autoconf to produce a configure script.

AC_INIT(thttpd.c)

AC_CANONICAL_SYSTEM

AC_PROG_CC

V_CCOPT="-O"
if test "$GCC" = yes ; then
	AC_MSG_CHECKING(gcc version)
	AC_CACHE_VAL(ac_cv_lbl_gcc_vers,
	    [ac_cv_lbl_gcc_vers=`$CC -dumpversion 2>&1 | \
		sed -e 's/^[[a-z-]]*//'`])
	AC_MSG_RESULT($ac_cv_lbl_gcc_vers)

	AC_MSG_CHECKING(gcc major version)
	AC_CACHE_VAL(ac_cv_lbl_gcc_majvers,
	    [ac_cv_lbl_gcc_majvers=`echo $ac_cv_lbl_gcc_vers | \
		sed -e 's/\..*//'`])
	AC_MSG_RESULT($ac_cv_lbl_gcc_majvers)

	AC_MSG_CHECKING(gcc minor version)
	AC_CACHE_VAL(ac_cv_lbl_gcc_minvers,
	    [ac_cv_lbl_gcc_minvers=`echo $ac_cv_lbl_gcc_vers | \
		sed -e 's/^[[0-9]]*\.//' -e 's/\..*//'`])
	AC_MSG_RESULT($ac_cv_lbl_gcc_minvers)

	if test -n "$ac_cv_lbl_gcc_majvers" &&
	   test -n "$ac_cv_lbl_gcc_minvers" &&
	   test "$ac_cv_lbl_gcc_majvers" -gt 1 ; then
	   #  major version >= 2
	   if test "$ac_cv_lbl_gcc_majvers" -lt 4 -o	\
		   "$ac_cv_lbl_gcc_majvers" -eq 4 -a	\
		   "$ac_cv_lbl_gcc_minvers" -lt 6 ; then
		# gcc versions < [34].6 may be too buggy or make faster code
		# when using -O1 instead of -O2;  gcc 2.95.[34] and
		# some sub versions of RH gcc 2.96.x (heavily patched)
		# could be good enough to support -O2 or -Os though.
		V_CCOPT="-O1"
	   else
		V_CCOPT="-O2"
	   fi
	fi
fi
if test -f .devel ; then
	V_CCOPT="-O0"
	V_CCOPT="-g $V_CCOPT -Wall -Wmissing-prototypes -Wstrict-prototypes -Wno-unused-but-set-variable"
fi

dnl
dnl maybe this should be a loop
dnl
AC_MSG_CHECKING(how to link static binaries)
AC_CACHE_VAL(ac_cv_lbl_static_flag,
    ac_cv_lbl_static_flag=unknown
    echo 'main() {}' > conftest.c
    if test "$GCC" != yes ; then
	    trial_flag="-Bstatic"
	    test=`$CC $trial_flag -o conftest conftest.c 2>&1`
	    if test -z "$test" ; then
		    ac_cv_lbl_static_flag="$trial_flag"
	    fi
	    rm -f conftest
    fi
    if test "$ac_cv_lbl_static_flag" = unknown ; then
	    trial_flag="-static"
	    test=`$CC $trial_flag -o conftest conftest.c 2>&1`
	    if test -z "$test" ; then
		    ac_cv_lbl_static_flag="$trial_flag"
	    fi
	    rm -f conftest
    fi
    rm conftest.c)
AC_MSG_RESULT($ac_cv_lbl_static_flag)
if test "$ac_cv_lbl_static_flag" != unknown ; then
	V_STATICFLAG="$ac_cv_lbl_static_flag"
fi

AC_MSG_CHECKING(for __progname)
AC_CACHE_VAL(ac_cv_extern__progname,
    AC_TRY_LINK([],
	[extern char *__progname;
	puts(__progname)],
	ac_cv_extern__progname=yes,
	ac_cv_extern__progname=no))
if test $ac_cv_extern__progname = yes ; then
	AC_DEFINE(HAVE__PROGNAME)
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

AC_CHECK_HEADERS(fcntl.h grp.h memory.h paths.h osreldate.h)
AC_CHECK_HEADERS(sys/event.h sys/epoll.h sys/devpoll.h poll.h sys/poll.h netinet/sctp.h)
AC_HEADER_TIME
AC_HEADER_DIRENT

d="/usr/local/v6/lib"
AC_MSG_CHECKING(for $d)
if test -d $d; then
	AC_MSG_RESULT(yes (Adding -L$d to LDFLAGS))
	LDFLAGS="$LDFLAGS -L$d"
else
	AC_MSG_RESULT(no)
fi

dnl
dnl Most operating systems have gethostbyname() in the default searched
dnl libraries (i.e. libc):
dnl
V_NETLIBS=""
AC_CHECK_FUNC(gethostbyname, ,
    # Some OSes (eg. Solaris) place it in libnsl:
    AC_LBL_CHECK_LIB(nsl, gethostbyname,
	V_NETLIBS="-lnsl $V_NETLIBS",
	# Some strange OSes (SINIX) have it in libsocket:
	AC_LBL_CHECK_LIB(socket, gethostbyname,
	    V_NETLIBS="-lsocket $V_NETLIBS",
	    # Unfortunately libsocket sometimes depends on libnsl.
	    # AC_CHECK_LIB's API is essentially broken so the
	    # following ugliness is necessary:
	    AC_LBL_CHECK_LIB(socket, gethostbyname,
		V_NETLIBS="-lsocket -lnsl $V_NETLIBS",
		AC_CHECK_LIB(resolv, gethostbyname,
		    V_NETLIBS="-lresolv $V_NETLIBS"),
		-lnsl))))
AC_CHECK_FUNC(socket, ,
    AC_CHECK_LIB(socket, socket,
	V_NETLIBS="-lsocket $V_NETLIBS",
	AC_LBL_CHECK_LIB(socket, socket,
	    V_NETLIBS="-lsocket -lnsl $V_NETLIBS", , -lnsl)))

AC_CHECK_LIB(inet6, main)

AC_CHECK_FUNC(crypt, , AC_CHECK_LIB(crypt, crypt))
AC_CHECK_FUNC(hstrerror, ,
    AC_CHECK_LIB(resolv, hstrerror, V_NETLIBS="-lresolv $V_NETLIBS"))

AC_FUNC_MMAP
AC_REPLACE_FUNCS(strerror)
AC_CHECK_FUNCS(waitpid vsnprintf daemon setsid setlogin getaddrinfo getnameinfo gai_strerror sigset)
AC_CHECK_FUNC(sctp_bindx, , AC_CHECK_LIB(sctp, sctp_bindx))

AC_CHECK_FUNCS(kqueue epoll_ctl)
AC_CHECK_HEADER(sys/devpoll.h,
	[AC_DEFINE(HAVE_DEVPOLL)] )
case "$target_os" in
*bsd*|*darwin*)
	AC_CHECK_FUNCS(poll select)
	AC_CHECK_FUNC(sendfile, [AC_DEFINE(HAVE_BSD_SENDFILE)])
	AC_DEFINE(HAVE_SA_LEN, 1, [Define this if your stack has sa_len in sockaddr struct.])
	;;
*linux*)
	AC_CHECK_FUNCS(poll select)
	AC_CHECK_FUNC(sendfile, [AC_DEFINE(HAVE_LINUX_SENDFILE)])
	;;
solaris*)
	dnl Solaris's select() is a bad wrapper routine.
	AC_CHECK_FUNCS(poll)
	AC_CHECK_FUNC(sendfilev, [AC_DEFINE(HAVE_SOLARIS_SENDFILEV)])
	AC_CHECK_LIB(sendfile, sendfilev, LIBS="-lsendfile $LIBS")
	;;
*)
	AC_CHECK_FUNCS(poll select)
	;;
esac

AC_ACME_TM_GMTOFF
AC_ACME_INT64T

AC_ACME_SOCKADDR_STORAGE
AC_ACME_SOCKADDR_IN6

AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_SUBST(DEFS)
AC_SUBST(V_CCOPT)
AC_SUBST(V_STATICFLAG)
AC_SUBST(V_NETLIBS)

AC_OUTPUT(Makefile cgi-src/Makefile)
